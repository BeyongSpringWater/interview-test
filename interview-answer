提供测试流程思路描述

思路流程描述：

极速&高速：
1.首先确定时间节点StartTime，记录GasNow每次自动更时的时间戳Update Time和四个价格存入一个集合gprices[]。
2.其次我们需要的最关键的一个测试数据就是一条交易从进入正在打包的交易队列的时间戳 P（或者节点在收到这条交易的广播的时间戳，
由于现有的资料没有阐述GasNow展示的每种价格下的处理时间是如何运算的，只能根据理解预测是这两种）到这条交易上链的时间戳 D（具体方式是爬取etherscan上交易所在block mined的时间戳）。
这样我们就能得出，交易的处理时间 F = D - P。
3.有了F之后我们就可以根据F，根据待处理的交易交易队列 Q中记录的所有Transaction Hash继续在etherscan上爬取交易的信息 TS（Transaction Hash、Block、Status、Gas Price）。
然后根据爬取到的block height,去Block列表爬取对应block height的上链时间On Chain Time并把这一字段信息加入到TS中最终体现为TS（Transaction Hash、Block、Status、Gas Price、On Chain Time）。
这样我们就能得到一个跟Q对应的带有上链时间戳的交易集合TS[]。
4.进一步遍历两个集合，然后拿到每条交易的交易的处理时间 F = D - P。根据F我们可以进一步根据GasNow的两个交易处理标准，t<15s、15s<t<60s、160s<t<180s、t>600s,TS中status为success的记录细分到两个集合
rapid[]、fast[]、standard[]、slow[]中。
5.遍历gprices[]，根据gas price的种类和时间戳 ，分别遍历对应的rapid[]、fast[]，找到集合中StartTime < On Chain Time < Update Time + 8s的交易，获取Gas Price，根据GasNow两种价格的算法验证预测是否准确。

一般&缓慢：
这两种GasPrice的验证同极速&高速，只需要我们在获取P的时候，改成一条交易从进入待处理的交易队列的时间戳。

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

测试用例：
由于测试需求是数据准确性的验证，并且测试过程中的数据都是通过内部接口或者爬虫爬取实现，没有输入数据的介入，所以测试用例比较简单。
1.确认四种Gas Price预测计算方式。
2.设计开发爬虫爬取测试数据，并为爬虫准备爬取网站登录所需的数据。
3.随机抽查比对爬取数据。
4.统计测试记过，给出测试报告。


------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------

可执行代码：
由于这次来杭没有带笔记本，笔记本都在成都所以只能给出爬虫的设计思路以及用Java实现这个爬虫所需的依赖。
依赖：可以考虑selenium跟phantomjs，两者都模拟浏览器操作，有丰富的api。持久化的方面可以考虑redis，数据库个人感觉此次测试对数据时效性要求高，除非考虑到历史结果统计展示可以用数据库。
实现：
1、注册登录，拿到token或者session。
2、如果所需爬取数据，网站提供Api，可以使用HttpClient调用，不过要注意调用频率限制。
3、可以根据思路流程描述，爬取测试所需数据，持久化。
4、统计测试结果。可以考虑用Testng以单元测试的方式，这样可以同个集成到jenkins，持续的构建部署做到分时段进行数据准确的检测。
测试结果既可以通过testng监听器做钉钉消息通知，也可以输出报告，持久化等。

PS：由于对区块链、以太坊了解不多，以上的测试思路都是都是这两天基于自己查一些相关的资料，可能有理解不对的地方，见谅。

